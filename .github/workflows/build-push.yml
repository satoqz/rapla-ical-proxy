name: build-push

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BIN: rapla-ical-proxy

jobs:
  build:
    strategy:
      matrix:
        arch: [aarch64, x86_64]

    runs-on: ubuntu-latest

    env:
      RUST_TARGET: ${{ matrix.arch }}-unknown-linux-musl
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Prepare Rust toolchain for ${{ env.RUST_TARGET }}
        run: |
          rustup target add ${{ env.RUST_TARGET }}
          gh release download --repo rust-cross/cargo-zigbuild -p '*.x86_64-unknown-linux-musl.tar.gz' -O - | tar xf - -C /usr/local/bin

      - name: Build for ${{ env.RUST_TARGET }}
        run: cargo zigbuild --locked --release --target ${{ env.RUST_TARGET }}

      - name: Upload artefact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ env.BIN }}-${{ env.RUST_TARGET }}
          path: target/${{ env.RUST_TARGET }}/release/${{ env.BIN }}

  push:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download artefact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.8.1
        with:
          path: bin
          pattern: ${{ env.BIN }}-*-unknown-linux-musl
          merge-multiple: true

      - name: Rename binaries
        working-directory: bin
        run: |
          mv ${{ env.BIN }}-aarch64-unknown-linux-musl ${{ env.BIN }}-arm64
          mv ${{ env.BIN }}-x86_64-unknown-linux-musl  ${{ env.BIN }}-amd64

      - name: Extract container image metadata
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix=
            type=sha,prefix=,format=long
        id: meta

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Log into registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name != 'pull_request'

      - name: Build and push container image
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # v6.10.0
        with:
          file: Dockerfile
          target: external-build
          context: bin
          platforms: linux/arm64,linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
