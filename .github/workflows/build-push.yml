name: build-push

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BIN: rapla-ical-proxy

jobs:
  build:
    strategy:
      matrix:
        arch: [aarch64, x86_64]

    runs-on: ubuntu-latest

    env:
      RUST_TARGET: ${{ matrix.arch }}-unknown-linux-musl
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Zig
        uses: mlugg/setup-zig@a67e68dc5c8281d9608136d3d7ca1b282213e4ac # v1.2.1

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8

      - name: Prepare Rust toolchain for ${{ env.RUST_TARGET }}
        run: |
          rustup target add ${{ env.RUST_TARGET }}
          gh release download --repo rust-cross/cargo-zigbuild -p '*.x86_64-unknown-linux-musl.tar.gz' -O - | tar xzf - -C /usr/local/bin
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Build for ${{ env.RUST_TARGET }}
        run: cargo zigbuild --locked --release --target ${{ env.RUST_TARGET }}

      - name: Rename binary
        run: cp target/${{ env.RUST_TARGET }}/release/${{ env.BIN }} ${{ env.BIN }}.${{ env.RUST_TARGET }}

      - name: Upload artefact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ env.BIN }}.${{ env.RUST_TARGET }}
          path: ${{ env.BIN }}.${{ env.RUST_TARGET }}

  push:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download artefact
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.8.1
        with:
          path: bin
          pattern: ${{ env.BIN }}.*
          merge-multiple: true

      - name: Rename & chmod binaries
        working-directory: bin
        run: |
          mv ${{ env.BIN }}.aarch64* ${{ env.BIN }}.arm64
          mv ${{ env.BIN }}.x86_64* ${{ env.BIN }}.amd64
          chmod +x *

      - name: Extract container image metadata
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix=
            type=sha,prefix=,format=long
        id: meta

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Log into registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name != 'pull_request'

      - name: Build and push container image
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          file: Dockerfile
          context: bin
          platforms: linux/arm64,linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
